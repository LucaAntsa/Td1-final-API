openapi: 3.0.0
info:
  title: Football Competition Management API
  version: 1.0.0

servers:
  - url: https://api.footballmanagement.com/v1

paths:
  /competitions:
    post:
      summary: Create a new competition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Competition'
      responses:
        '201':
          description: Competition created
    get:
      summary: Get a list of competitions
      parameters:
        - name: page
          in: query
          required: true
          schema: { type: integer, example: 1 }
        - name: pageSize
          in: query
          required: true
          schema: { type: integer, example: 10 }
      responses:
        '200':
          description: A list of competitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competition'

  /teams:
    post:
      summary: Create a new team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '201':
          description: Team created
    get:
      summary: Get a list of teams
      parameters:
        - name: teamName
          in: query
          schema: { type: string }
        - name: page
          in: query
          required: true
          schema: { type: integer, example: 1 }
        - name: pageSize
          in: query
          required: true
          schema: { type: integer, example: 10 }
      responses:
        '200':
          description: A list of teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'

  /teams/{teamId}/players:
    parameters:
      - name: teamId
        in: path
        required: true
        schema:
          type: string
          example: "123"
    post:
      summary: Add a player to a team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '201':
          description: Player added
    get:
      summary: Get a list of players in a team
      parameters:
        - name: playerName
          in: query
          schema: { type: string }
        - name: page
          in: query
          required: true
          schema: { type: integer, example: 1 }
        - name: pageSize
          in: query
          required: true
          schema: { type: integer, example: 10 }
      responses:
        '200':
          description: A list of players
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'

components:
  schemas:
    Competition:
      type: object
      properties:
        name: { type: string, example: "LIGA" }
        location: { type: string, example: "SPAIN" }
      required: [name, location]

    Team:
      type: object
      properties:
        name: { type: string, example: "Real Madrid" }
        slogan: { type: string, example: "Hala Madrid!" }
      required: [name, slogan]

    Player:
      type: object
      properties:
        name: { type: string, example: "Cristiano Ronaldo" }
        number: { type: integer, example: 7 }
        strongFoot: 
          type: string
          enum: [Left, Right]
          example: "Right"
      required: [name, number, strongFoot]
